openapi: 3.0.0
info:
  description: This APIs for iwf SDKs to operate workflows
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Workflow APIs
  version: 1.0.0
servers:
- url: http://petstore.swagger.io/v2
paths:
  /api/v1/workflow/start:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowStartRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowStartResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: start a workflow
  /api/v1/workflow/signal:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowSignalRequest'
      responses:
        "200":
          content: {}
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: signal a workflow
  /api/v1/workflow/queryattributes/get:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowGetQueryAttributesRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowGetQueryAttributesResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: get workflow query attributes
  /api/v1/workflow/searchattributes/get:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowGetQueryAttributesRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowGetQueryAttributesResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: get workflow search attributes
  /api/v1/workflow/get:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowGetRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowGetResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: get a workflow's status and results(if completed & requested)
  /api/v1/workflow/getWithWait:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowGetRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowGetResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: "get a workflow's status and results(if completed & requested), wait\
        \ if the workflow is still running"
  /api/v1/workflow/search:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowSearchRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowSearchResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: search for workflows by a search attribute query
  /api/v1/workflow/reset:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowResetRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowResetResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: reset a workflow
  /api/v1/workflowState/start:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowStateStartRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowStateStartResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: for invoking WorkflowState.start API
  /api/v1/workflowState/decide:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowStateDecideRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowStateDecideResponse'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid input
      summary: for invoking WorkflowState.decide API
components:
  schemas:
    KeyValue:
      example:
        value:
          data: data
          encoding: encoding
        key: key
      properties:
        key:
          type: string
        value:
          $ref: '#/components/schemas/EncodedObject'
      type: object
    EncodedObject:
      example:
        data: data
        encoding: encoding
      properties:
        encoding:
          type: string
        data:
          type: string
      type: object
    SearchAttributeKeyAndType:
      properties:
        key:
          type: string
        valueType:
          enum:
          - KEYWORD
          - INT
          type: string
      type: object
    SearchAttribute:
      example:
        stringValue: stringValue
        valueType: KEYWORD
        integerValue: 0
        key: key
      properties:
        key:
          type: string
        stringValue:
          type: string
        integerValue:
          format: int64
          type: integer
        valueType:
          enum:
          - KEYWORD
          - INT
          type: string
      type: object
    WorkflowStateOptions:
      example:
        searchAttributesLoadingPolicy:
          attributeLoadingType: LOAD_ALL_WITHOUT_LOCKING
          attributeKeys:
          - attributeKeys
          - attributeKeys
        commandCarryOverPolicy:
          commandCarryOverType: NONE
        queryAttributesLoadingPolicy:
          attributeLoadingType: LOAD_ALL_WITHOUT_LOCKING
          attributeKeys:
          - attributeKeys
          - attributeKeys
      properties:
        searchAttributesLoadingPolicy:
          $ref: '#/components/schemas/AttributesLoadingPolicy'
        queryAttributesLoadingPolicy:
          $ref: '#/components/schemas/AttributesLoadingPolicy'
        commandCarryOverPolicy:
          $ref: '#/components/schemas/CommandCarryOverPolicy'
      type: object
    AttributesLoadingPolicy:
      example:
        attributeLoadingType: LOAD_ALL_WITHOUT_LOCKING
        attributeKeys:
        - attributeKeys
        - attributeKeys
      properties:
        attributeLoadingType:
          enum:
          - LOAD_ALL_WITHOUT_LOCKING
          - LOAD_ALL_WITH_EXCLUSIVE_LOCK
          - LOAD_PARTIAL_WITHOUT_LOCKING
          - LOAD_PARTIAL_WITH_EXCLUSIVE_LOCK
          type: string
        attributeKeys:
          items:
            type: string
          type: array
      type: object
    CommandCarryOverPolicy:
      example:
        commandCarryOverType: NONE
      properties:
        commandCarryOverType:
          enum:
          - NONE
          - ALL_UNFINISHED
          type: string
      type: object
    ErrorResponse:
      properties:
        detail:
          type: string
        subStatus:
          type: string
      type: object
    WorkflowStartRequest:
      example:
        startStateId: startStateId
        workflowTimeoutSeconds: 0
        stateOptions:
          searchAttributesLoadingPolicy:
            attributeLoadingType: LOAD_ALL_WITHOUT_LOCKING
            attributeKeys:
            - attributeKeys
            - attributeKeys
          commandCarryOverPolicy:
            commandCarryOverType: NONE
          queryAttributesLoadingPolicy:
            attributeLoadingType: LOAD_ALL_WITHOUT_LOCKING
            attributeKeys:
            - attributeKeys
            - attributeKeys
        iwfWorkflowType: iwfWorkflowType
        iwfWorkerUrl: iwfWorkerUrl
        workflowId: workflowId
        stateInput:
          data: data
          encoding: encoding
      properties:
        workflowId:
          type: string
        iwfWorkflowType:
          type: string
        workflowTimeoutSeconds:
          type: integer
        iwfWorkerUrl:
          type: string
        startStateId:
          type: string
        stateInput:
          $ref: '#/components/schemas/EncodedObject'
        stateOptions:
          $ref: '#/components/schemas/WorkflowStateOptions'
      required:
      - iwfWorkerUrl
      - iwfWorkflowType
      - startStateId
      - workflowId
      - workflowTimeoutSeconds
      type: object
    WorkflowStartResponse:
      example:
        workflowRunId: workflowRunId
      properties:
        workflowRunId:
          type: string
      type: object
    WorkflowSignalRequest:
      example:
        signalChannelName: signalChannelName
        workflowRunId: workflowRunId
        workflowId: workflowId
        signalValue:
          data: data
          encoding: encoding
      properties:
        workflowId:
          type: string
        workflowRunId:
          type: string
        signalChannelName:
          type: string
        signalValue:
          $ref: '#/components/schemas/EncodedObject'
      required:
      - signalChannelName
      - workflowId
      type: object
    WorkflowGetQueryAttributesRequest:
      example:
        attributeKeys:
        - attributeKeys
        - attributeKeys
        workflowRunId: workflowRunId
        workflowId: workflowId
      properties:
        workflowId:
          type: string
        workflowRunId:
          type: string
        attributeKeys:
          items:
            type: string
          type: array
      required:
      - workflowId
      type: object
    WorkflowGetQueryAttributesResponse:
      example:
        queryAttributes:
        - value:
            data: data
            encoding: encoding
          key: key
        - value:
            data: data
            encoding: encoding
          key: key
      properties:
        queryAttributes:
          items:
            $ref: '#/components/schemas/KeyValue'
          type: array
      type: object
    WorkflowGetSearchAttributesRequest:
      properties:
        workflowId:
          type: string
        workflowRunId:
          type: string
        attributeKeys:
          items:
            $ref: '#/components/schemas/SearchAttributeKeyAndType'
          type: array
      required:
      - workflowId
      type: object
    WorkflowGetSearchAttributesResponse:
      properties:
        queryAttributes:
          items:
            $ref: '#/components/schemas/KeyValue'
          type: array
      type: object
    WorkflowGetRequest:
      example:
        waitTimeSeconds: 0
        needsResults: true
        workflowRunId: workflowRunId
        workflowId: workflowId
      properties:
        workflowId:
          type: string
        workflowRunId:
          type: string
        needsResults:
          type: boolean
        waitTimeSeconds:
          type: integer
      required:
      - workflowId
      type: object
    WorkflowGetResponse:
      example:
        workflowStatus: RUNNING
        workflowRunId: workflowRunId
        results:
        - completedStateOutput:
            data: data
            encoding: encoding
          completedStateExecutionId: completedStateExecutionId
          completedStateId: completedStateId
        - completedStateOutput:
            data: data
            encoding: encoding
          completedStateExecutionId: completedStateExecutionId
          completedStateId: completedStateId
      properties:
        workflowRunId:
          type: string
        workflowStatus:
          enum:
          - RUNNING
          - COMPLETED
          - FAILED
          - TIMEOUT
          - TERMINATED
          - CANCELED
          - CONTINUED_AS_NEW
          type: string
        results:
          items:
            $ref: '#/components/schemas/StateCompletionOutput'
          type: array
      required:
      - workflowRunId
      - workflowStatus
      type: object
    StateCompletionOutput:
      example:
        completedStateOutput:
          data: data
          encoding: encoding
        completedStateExecutionId: completedStateExecutionId
        completedStateId: completedStateId
      properties:
        completedStateId:
          type: string
        completedStateExecutionId:
          type: string
        completedStateOutput:
          $ref: '#/components/schemas/EncodedObject'
      required:
      - completedStateExecutionId
      - completedStateId
      type: object
    WorkflowSearchRequest:
      example:
        query: query
        pageSize: 0
      properties:
        query:
          type: string
        pageSize:
          format: int32
          type: integer
      required:
      - query
      type: object
    WorkflowSearchResponse:
      example:
        workflowExecutions:
        - workflowRunId: workflowRunId
          workflowId: workflowId
        - workflowRunId: workflowRunId
          workflowId: workflowId
      properties:
        workflowExecutions:
          items:
            $ref: '#/components/schemas/WorkflowSearchResponseEntry'
          type: array
      type: object
    WorkflowSearchResponseEntry:
      example:
        workflowRunId: workflowRunId
        workflowId: workflowId
      properties:
        workflowId:
          type: string
        workflowRunId:
          type: string
      required:
      - workflowId
      - workflowRunId
      type: object
    WorkflowResetRequest:
      example:
        reason: reason
        reset_bad_binary_checksum: reset_bad_binary_checksum
        historyEventId: 0
        earliest_time: earliest_time
        decision_offset: 6
        resetType: HISTORY_EVENT_ID
        skip_signal_reapply: true
        workflowRunId: workflowRunId
        workflowId: workflowId
      properties:
        workflowId:
          type: string
        workflowRunId:
          type: string
        resetType:
          enum:
          - HISTORY_EVENT_ID
          - FIRST_DECISION_COMPLETED
          - LAST_DECISION_COMPLETED
          - LAST_CONTINUED_AS_NEW
          - BAD_BINARY
          - DECISION_COMPLETED_TIME
          - FIRST_DECISION_SCHEDULED
          - LAST_DECISION_SCHEDULED
          type: string
        historyEventId:
          type: integer
        reason:
          type: string
        decision_offset:
          type: integer
        reset_bad_binary_checksum:
          type: string
        earliest_time:
          type: string
        skip_signal_reapply:
          type: boolean
      required:
      - resetType
      - workflowId
      type: object
    WorkflowResetResponse:
      example:
        workflowRunId: workflowRunId
      properties:
        workflowRunId:
          type: string
      required:
      - workflowRunId
      type: object
    WorkflowStateStartRequest:
      example:
        queryAttributes:
        - value:
            data: data
            encoding: encoding
          key: key
        - value:
            data: data
            encoding: encoding
          key: key
        workflowStateId: workflowStateId
        context:
          workflowStartedTimestamp: 0
          workflowRunId: workflowRunId
          workflowId: workflowId
          stateExecutionId: stateExecutionId
        workflowType: workflowType
        searchAttributes:
        - stringValue: stringValue
          valueType: KEYWORD
          integerValue: 0
          key: key
        - stringValue: stringValue
          valueType: KEYWORD
          integerValue: 0
          key: key
        stateInput:
          data: data
          encoding: encoding
      properties:
        context:
          $ref: '#/components/schemas/Context'
        workflowType:
          type: string
        workflowStateId:
          type: string
        stateInput:
          $ref: '#/components/schemas/EncodedObject'
        searchAttributes:
          items:
            $ref: '#/components/schemas/SearchAttribute'
          type: array
        queryAttributes:
          items:
            $ref: '#/components/schemas/KeyValue'
          type: array
      required:
      - context
      - workflowStateId
      - workflowType
      type: object
    WorkflowStateStartResponse:
      example:
        upsertSearchAttributes:
        - stringValue: stringValue
          valueType: KEYWORD
          integerValue: 0
          key: key
        - stringValue: stringValue
          valueType: KEYWORD
          integerValue: 0
          key: key
        upsertStateLocalAttributes:
        - value:
            data: data
            encoding: encoding
          key: key
        - value:
            data: data
            encoding: encoding
          key: key
        commandRequest:
          signalCommands:
          - signalChannelName: signalChannelName
            commandId: commandId
          - signalChannelName: signalChannelName
            commandId: commandId
          timerCommands:
          - firingUnixTimestampSeconds: 1
            commandId: commandId
          - firingUnixTimestampSeconds: 1
            commandId: commandId
          deciderTriggerType: ALL_COMMAND_COMPLETED
          onQueryAttributeChangeCommands:
          - attributeKey: attributeKey
            commandId: commandId
          - attributeKey: attributeKey
            commandId: commandId
          activityCommands:
          - input:
              data: data
              encoding: encoding
            activityOptions:
              startToCloseTimeoutSeconds: 6
            activityType: activityType
            commandId: commandId
          - input:
              data: data
              encoding: encoding
            activityOptions:
              startToCloseTimeoutSeconds: 6
            activityType: activityType
            commandId: commandId
        upsertQueryAttributes:
        - value:
            data: data
            encoding: encoding
          key: key
        - value:
            data: data
            encoding: encoding
          key: key
      properties:
        upsertSearchAttributes:
          items:
            $ref: '#/components/schemas/SearchAttribute'
          type: array
        upsertQueryAttributes:
          items:
            $ref: '#/components/schemas/KeyValue'
          type: array
        commandRequest:
          $ref: '#/components/schemas/CommandRequest'
        upsertStateLocalAttributes:
          items:
            $ref: '#/components/schemas/KeyValue'
          type: array
      type: object
    WorkflowStateDecideRequest:
      example:
        queryAttributes:
        - value:
            data: data
            encoding: encoding
          key: key
        - value:
            data: data
            encoding: encoding
          key: key
        workflowStateId: workflowStateId
        stateLocalAttributes:
        - value:
            data: data
            encoding: encoding
          key: key
        - value:
            data: data
            encoding: encoding
          key: key
        commandResults:
          signalResults:
          - signalRequestStatus: WAITING
            signalChannelName: signalChannelName
            commandId: commandId
            signalValue:
              data: data
              encoding: encoding
          - signalRequestStatus: WAITING
            signalChannelName: signalChannelName
            commandId: commandId
            signalValue:
              data: data
              encoding: encoding
          activityResults:
          - output:
              data: data
              encoding: encoding
            timeoutType: SCHEDULED_TO_START
            activityStatus: OPEN
            activityType: activityType
            commandId: commandId
          - output:
              data: data
              encoding: encoding
            timeoutType: SCHEDULED_TO_START
            activityStatus: OPEN
            activityType: activityType
            commandId: commandId
          onQueryAttributeChangeResults:
          - commandId: commandId
            status: WAITING
          - commandId: commandId
            status: WAITING
          timerResults:
          - timerStatus: SCHEDULED
            commandId: commandId
          - timerStatus: SCHEDULED
            commandId: commandId
        context:
          workflowStartedTimestamp: 0
          workflowRunId: workflowRunId
          workflowId: workflowId
          stateExecutionId: stateExecutionId
        workflowType: workflowType
        searchAttributes:
        - stringValue: stringValue
          valueType: KEYWORD
          integerValue: 0
          key: key
        - stringValue: stringValue
          valueType: KEYWORD
          integerValue: 0
          key: key
        stateInput:
          data: data
          encoding: encoding
      properties:
        context:
          $ref: '#/components/schemas/Context'
        workflowType:
          type: string
        workflowStateId:
          type: string
        stateInput:
          $ref: '#/components/schemas/EncodedObject'
        searchAttributes:
          items:
            $ref: '#/components/schemas/SearchAttribute'
          type: array
        queryAttributes:
          items:
            $ref: '#/components/schemas/KeyValue'
          type: array
        stateLocalAttributes:
          items:
            $ref: '#/components/schemas/KeyValue'
          type: array
        commandResults:
          $ref: '#/components/schemas/CommandResults'
      required:
      - context
      - workflowStateId
      - workflowType
      type: object
    WorkflowStateDecideResponse:
      example:
        stateDecision:
          upsertSearchAttributes:
          - stringValue: stringValue
            valueType: KEYWORD
            integerValue: 0
            key: key
          - stringValue: stringValue
            valueType: KEYWORD
            integerValue: 0
            key: key
          nextStates:
          - nextStateInput:
              data: data
              encoding: encoding
            stateId: stateId
            nextStateOptions:
              searchAttributesLoadingPolicy:
                attributeLoadingType: LOAD_ALL_WITHOUT_LOCKING
                attributeKeys:
                - attributeKeys
                - attributeKeys
              commandCarryOverPolicy:
                commandCarryOverType: NONE
              queryAttributesLoadingPolicy:
                attributeLoadingType: LOAD_ALL_WITHOUT_LOCKING
                attributeKeys:
                - attributeKeys
                - attributeKeys
          - nextStateInput:
              data: data
              encoding: encoding
            stateId: stateId
            nextStateOptions:
              searchAttributesLoadingPolicy:
                attributeLoadingType: LOAD_ALL_WITHOUT_LOCKING
                attributeKeys:
                - attributeKeys
                - attributeKeys
              commandCarryOverPolicy:
                commandCarryOverType: NONE
              queryAttributesLoadingPolicy:
                attributeLoadingType: LOAD_ALL_WITHOUT_LOCKING
                attributeKeys:
                - attributeKeys
                - attributeKeys
          upsertQueryAttributes:
          - value:
              data: data
              encoding: encoding
            key: key
          - value:
              data: data
              encoding: encoding
            key: key
          waitForMoreCommandResults: true
      properties:
        stateDecision:
          $ref: '#/components/schemas/StateDecision'
      type: object
    StateDecision:
      example:
        upsertSearchAttributes:
        - stringValue: stringValue
          valueType: KEYWORD
          integerValue: 0
          key: key
        - stringValue: stringValue
          valueType: KEYWORD
          integerValue: 0
          key: key
        nextStates:
        - nextStateInput:
            data: data
            encoding: encoding
          stateId: stateId
          nextStateOptions:
            searchAttributesLoadingPolicy:
              attributeLoadingType: LOAD_ALL_WITHOUT_LOCKING
              attributeKeys:
              - attributeKeys
              - attributeKeys
            commandCarryOverPolicy:
              commandCarryOverType: NONE
            queryAttributesLoadingPolicy:
              attributeLoadingType: LOAD_ALL_WITHOUT_LOCKING
              attributeKeys:
              - attributeKeys
              - attributeKeys
        - nextStateInput:
            data: data
            encoding: encoding
          stateId: stateId
          nextStateOptions:
            searchAttributesLoadingPolicy:
              attributeLoadingType: LOAD_ALL_WITHOUT_LOCKING
              attributeKeys:
              - attributeKeys
              - attributeKeys
            commandCarryOverPolicy:
              commandCarryOverType: NONE
            queryAttributesLoadingPolicy:
              attributeLoadingType: LOAD_ALL_WITHOUT_LOCKING
              attributeKeys:
              - attributeKeys
              - attributeKeys
        upsertQueryAttributes:
        - value:
            data: data
            encoding: encoding
          key: key
        - value:
            data: data
            encoding: encoding
          key: key
        waitForMoreCommandResults: true
      properties:
        waitForMoreCommandResults:
          type: boolean
        nextStates:
          items:
            $ref: '#/components/schemas/StateMovement'
          type: array
        upsertSearchAttributes:
          items:
            $ref: '#/components/schemas/SearchAttribute'
          type: array
        upsertQueryAttributes:
          items:
            $ref: '#/components/schemas/KeyValue'
          type: array
      type: object
    StateMovement:
      example:
        nextStateInput:
          data: data
          encoding: encoding
        stateId: stateId
        nextStateOptions:
          searchAttributesLoadingPolicy:
            attributeLoadingType: LOAD_ALL_WITHOUT_LOCKING
            attributeKeys:
            - attributeKeys
            - attributeKeys
          commandCarryOverPolicy:
            commandCarryOverType: NONE
          queryAttributesLoadingPolicy:
            attributeLoadingType: LOAD_ALL_WITHOUT_LOCKING
            attributeKeys:
            - attributeKeys
            - attributeKeys
      properties:
        stateId:
          type: string
        nextStateInput:
          $ref: '#/components/schemas/EncodedObject'
        nextStateOptions:
          $ref: '#/components/schemas/WorkflowStateOptions'
      required:
      - stateId
      type: object
    CommandRequest:
      example:
        signalCommands:
        - signalChannelName: signalChannelName
          commandId: commandId
        - signalChannelName: signalChannelName
          commandId: commandId
        timerCommands:
        - firingUnixTimestampSeconds: 1
          commandId: commandId
        - firingUnixTimestampSeconds: 1
          commandId: commandId
        deciderTriggerType: ALL_COMMAND_COMPLETED
        onQueryAttributeChangeCommands:
        - attributeKey: attributeKey
          commandId: commandId
        - attributeKey: attributeKey
          commandId: commandId
        activityCommands:
        - input:
            data: data
            encoding: encoding
          activityOptions:
            startToCloseTimeoutSeconds: 6
          activityType: activityType
          commandId: commandId
        - input:
            data: data
            encoding: encoding
          activityOptions:
            startToCloseTimeoutSeconds: 6
          activityType: activityType
          commandId: commandId
      properties:
        deciderTriggerType:
          enum:
          - ALL_COMMAND_COMPLETED
          - ANY_COMMAND_COMPLETED
          - ANY_COMMAND_CLOSED
          type: string
        activityCommands:
          items:
            $ref: '#/components/schemas/ActivityCommand'
          type: array
        timerCommands:
          items:
            $ref: '#/components/schemas/TimerCommand'
          type: array
        signalCommands:
          items:
            $ref: '#/components/schemas/SignalCommand'
          type: array
        onQueryAttributeChangeCommands:
          items:
            $ref: '#/components/schemas/OnQueryAttributeChangeCommand'
          type: array
      required:
      - deciderTriggerType
      type: object
    CommandResults:
      example:
        signalResults:
        - signalRequestStatus: WAITING
          signalChannelName: signalChannelName
          commandId: commandId
          signalValue:
            data: data
            encoding: encoding
        - signalRequestStatus: WAITING
          signalChannelName: signalChannelName
          commandId: commandId
          signalValue:
            data: data
            encoding: encoding
        activityResults:
        - output:
            data: data
            encoding: encoding
          timeoutType: SCHEDULED_TO_START
          activityStatus: OPEN
          activityType: activityType
          commandId: commandId
        - output:
            data: data
            encoding: encoding
          timeoutType: SCHEDULED_TO_START
          activityStatus: OPEN
          activityType: activityType
          commandId: commandId
        onQueryAttributeChangeResults:
        - commandId: commandId
          status: WAITING
        - commandId: commandId
          status: WAITING
        timerResults:
        - timerStatus: SCHEDULED
          commandId: commandId
        - timerStatus: SCHEDULED
          commandId: commandId
      properties:
        activityResults:
          items:
            $ref: '#/components/schemas/ActivityResult'
          type: array
        signalResults:
          items:
            $ref: '#/components/schemas/SignalResult'
          type: array
        timerResults:
          items:
            $ref: '#/components/schemas/TimerResult'
          type: array
        onQueryAttributeChangeResults:
          items:
            $ref: '#/components/schemas/OnQueryAttributeChangeResult'
          type: array
      type: object
    ActivityCommand:
      example:
        input:
          data: data
          encoding: encoding
        activityOptions:
          startToCloseTimeoutSeconds: 6
        activityType: activityType
        commandId: commandId
      properties:
        commandId:
          type: string
        activityType:
          type: string
        input:
          $ref: '#/components/schemas/EncodedObject'
        activityOptions:
          $ref: '#/components/schemas/ActivityOptions'
      required:
      - activityType
      - commandId
      type: object
    TimerCommand:
      example:
        firingUnixTimestampSeconds: 1
        commandId: commandId
      properties:
        commandId:
          type: string
        firingUnixTimestampSeconds:
          format: int64
          type: integer
      required:
      - commandId
      - firingUnixTimestampSeconds
      type: object
    SignalCommand:
      example:
        signalChannelName: signalChannelName
        commandId: commandId
      properties:
        commandId:
          type: string
        signalChannelName:
          type: string
      required:
      - commandId
      - signalChannelName
      type: object
    OnQueryAttributeChangeCommand:
      example:
        attributeKey: attributeKey
        commandId: commandId
      properties:
        commandId:
          type: string
        attributeKey:
          type: string
      required:
      - attributeKey
      - commandId
      type: object
    ActivityOptions:
      example:
        startToCloseTimeoutSeconds: 6
      properties:
        startToCloseTimeoutSeconds:
          type: integer
      type: object
    ActivityResult:
      example:
        output:
          data: data
          encoding: encoding
        timeoutType: SCHEDULED_TO_START
        activityStatus: OPEN
        activityType: activityType
        commandId: commandId
      properties:
        commandId:
          type: string
        activityType:
          type: string
        output:
          $ref: '#/components/schemas/EncodedObject'
        activityStatus:
          enum:
          - OPEN
          - COMPLETED
          - TIMEOUT
          - FAILED
          type: string
        timeoutType:
          enum:
          - SCHEDULED_TO_START
          - START_TO_CLOSE
          - SCHEDULE_TO_CLOSE
          - HEARTBEAT
          type: string
      required:
      - activityStatus
      - activityType
      - commandId
      type: object
    TimerResult:
      example:
        timerStatus: SCHEDULED
        commandId: commandId
      properties:
        commandId:
          type: string
        timerStatus:
          enum:
          - SCHEDULED
          - FIRED
          type: string
      required:
      - commandId
      - timerStatus
      type: object
    OnQueryAttributeChangeResult:
      example:
        commandId: commandId
        status: WAITING
      properties:
        commandId:
          type: string
        status:
          enum:
          - WAITING
          - COMPLETED
          type: string
      required:
      - commandId
      - status
      type: object
    SignalResult:
      example:
        signalRequestStatus: WAITING
        signalChannelName: signalChannelName
        commandId: commandId
        signalValue:
          data: data
          encoding: encoding
      properties:
        commandId:
          type: string
        signalRequestStatus:
          enum:
          - WAITING
          - RECEIVED
          type: string
        signalChannelName:
          type: string
        signalValue:
          $ref: '#/components/schemas/EncodedObject'
      required:
      - commandId
      - signalChannelName
      - signalRequestStatus
      type: object
    Context:
      example:
        workflowStartedTimestamp: 0
        workflowRunId: workflowRunId
        workflowId: workflowId
        stateExecutionId: stateExecutionId
      properties:
        workflowId:
          type: string
        workflowRunId:
          type: string
        workflowStartedTimestamp:
          format: int64
          type: integer
        stateExecutionId:
          type: string
      required:
      - commandId
      - stateExecutionId
      - workflowId
      - workflowRunId
      - workflowStartedTimestamp
      type: object

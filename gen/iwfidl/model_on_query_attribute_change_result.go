/*
Workflow APIs

This APIs for iwf SDKs to operate workflows

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iwfidl

import (
	"encoding/json"
)

// OnQueryAttributeChangeResult struct for OnQueryAttributeChangeResult
type OnQueryAttributeChangeResult struct {
	CommandId string `json:"commandId"`
	Status string `json:"status"`
}

// NewOnQueryAttributeChangeResult instantiates a new OnQueryAttributeChangeResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnQueryAttributeChangeResult(commandId string, status string) *OnQueryAttributeChangeResult {
	this := OnQueryAttributeChangeResult{}
	this.CommandId = commandId
	this.Status = status
	return &this
}

// NewOnQueryAttributeChangeResultWithDefaults instantiates a new OnQueryAttributeChangeResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnQueryAttributeChangeResultWithDefaults() *OnQueryAttributeChangeResult {
	this := OnQueryAttributeChangeResult{}
	return &this
}

// GetCommandId returns the CommandId field value
func (o *OnQueryAttributeChangeResult) GetCommandId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CommandId
}

// GetCommandIdOk returns a tuple with the CommandId field value
// and a boolean to check if the value has been set.
func (o *OnQueryAttributeChangeResult) GetCommandIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommandId, true
}

// SetCommandId sets field value
func (o *OnQueryAttributeChangeResult) SetCommandId(v string) {
	o.CommandId = v
}

// GetStatus returns the Status field value
func (o *OnQueryAttributeChangeResult) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *OnQueryAttributeChangeResult) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *OnQueryAttributeChangeResult) SetStatus(v string) {
	o.Status = v
}

func (o OnQueryAttributeChangeResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["commandId"] = o.CommandId
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableOnQueryAttributeChangeResult struct {
	value *OnQueryAttributeChangeResult
	isSet bool
}

func (v NullableOnQueryAttributeChangeResult) Get() *OnQueryAttributeChangeResult {
	return v.value
}

func (v *NullableOnQueryAttributeChangeResult) Set(val *OnQueryAttributeChangeResult) {
	v.value = val
	v.isSet = true
}

func (v NullableOnQueryAttributeChangeResult) IsSet() bool {
	return v.isSet
}

func (v *NullableOnQueryAttributeChangeResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnQueryAttributeChangeResult(val *OnQueryAttributeChangeResult) *NullableOnQueryAttributeChangeResult {
	return &NullableOnQueryAttributeChangeResult{value: val, isSet: true}
}

func (v NullableOnQueryAttributeChangeResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnQueryAttributeChangeResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


